{"version":3,"file":"index.js","sources":["../src/jsonify_notice.ts","../src/metrics.ts","../src/scope.ts","../node_modules/stackframe/stackframe.js","../node_modules/error-stack-parser/error-stack-parser.js","../src/processor/esp.ts","../src/filter/angular_message.ts","../src/filter/debounce.ts","../src/filter/ignore_noise.ts","../src/filter/uncaught_message.ts","../src/http_req/api.ts","../src/http_req/fetch.ts","../src/http_req/node.ts","../src/http_req/index.ts","../src/tdshared.ts","../src/queries.ts","../src/queues.ts","../src/routes.ts","../src/version.ts","../src/remote_settings.ts","../src/base_notifier.ts","../src/filter/window.ts","../src/instrumentation/console.ts","../src/instrumentation/dom.ts","../src/instrumentation/fetch.ts","../src/instrumentation/location.ts","../src/instrumentation/xhr.ts","../src/instrumentation/unhandledrejection.ts","../src/notifier.ts"],"sourcesContent":["import { INotice } from './notice';\n\nconst FILTERED = '[Filtered]';\nconst MAX_OBJ_LENGTH = 128;\n\n// jsonifyNotice serializes notice to JSON and truncates params,\n// environment and session keys.\nexport function jsonifyNotice(\n  notice: INotice,\n  { maxLength = 64000, keysBlocklist = [], keysAllowlist = [] } = {}\n): string {\n  if (notice.errors) {\n    for (let i = 0; i < notice.errors.length; i++) {\n      let t = new Truncator({ keysBlocklist, keysAllowlist });\n      notice.errors[i] = t.truncate(notice.errors[i]);\n    }\n  }\n\n  let s = '';\n  let keys = ['params', 'environment', 'session'];\n  for (let level = 0; level < 8; level++) {\n    let opts = { level, keysBlocklist, keysAllowlist };\n    for (let key of keys) {\n      let obj = notice[key];\n      if (obj) {\n        notice[key] = truncate(obj, opts);\n      }\n    }\n\n    s = JSON.stringify(notice);\n    if (s.length < maxLength) {\n      return s;\n    }\n  }\n\n  let params = {\n    json: s.slice(0, Math.floor(maxLength / 2)) + '...',\n  };\n  keys.push('errors');\n  for (let key of keys) {\n    let obj = notice[key];\n    if (!obj) {\n      continue;\n    }\n\n    s = JSON.stringify(obj);\n    params[key] = s.length;\n  }\n\n  let err = new Error(\n    `airbrake: notice exceeds max length and can't be truncated`\n  );\n  (err as any).params = params;\n  throw err;\n}\n\nfunction scale(num: number, level: number): number {\n  return num >> level || 1;\n}\n\ninterface ITruncatorOptions {\n  level?: number;\n  keysBlocklist?: any[];\n  keysAllowlist?: any[];\n}\n\nclass Truncator {\n  private maxStringLength = 1024;\n  private maxObjectLength = MAX_OBJ_LENGTH;\n  private maxArrayLength = MAX_OBJ_LENGTH;\n  private maxDepth = 8;\n\n  private keys: string[] = [];\n  private keysBlocklist: any[] = [];\n  private keysAllowlist: any[] = [];\n  private seen: any[] = [];\n\n  constructor(opts: ITruncatorOptions) {\n    let level = opts.level || 0;\n    this.keysBlocklist = opts.keysBlocklist || [];\n    this.keysAllowlist = opts.keysAllowlist || [];\n\n    this.maxStringLength = scale(this.maxStringLength, level);\n    this.maxObjectLength = scale(this.maxObjectLength, level);\n    this.maxArrayLength = scale(this.maxArrayLength, level);\n    this.maxDepth = scale(this.maxDepth, level);\n  }\n\n  public truncate(value: any, key = '', depth = 0): any {\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n      case 'function':\n        return value;\n      case 'string':\n        return this.truncateString(value);\n      case 'object':\n        break;\n      default:\n        return this.truncateString(String(value));\n    }\n\n    if (value instanceof String) {\n      return this.truncateString(value.toString());\n    }\n\n    if (\n      value instanceof Boolean ||\n      value instanceof Number ||\n      value instanceof Date ||\n      value instanceof RegExp\n    ) {\n      return value;\n    }\n\n    if (value instanceof Error) {\n      return this.truncateString(value.toString());\n    }\n\n    if (this.seen.indexOf(value) >= 0) {\n      return `[Circular ${this.getPath(value)}]`;\n    }\n\n    let type = objectType(value);\n\n    depth++;\n    if (depth > this.maxDepth) {\n      return `[Truncated ${type}]`;\n    }\n\n    this.keys.push(key);\n    this.seen.push(value);\n\n    switch (type) {\n      case 'Array':\n        return this.truncateArray(value, depth);\n      case 'Object':\n        return this.truncateObject(value, depth);\n      default:\n        let saved = this.maxDepth;\n        this.maxDepth = 0;\n\n        let obj = this.truncateObject(value, depth);\n        obj.__type = type;\n\n        this.maxDepth = saved;\n\n        return obj;\n    }\n  }\n\n  private getPath(value): string {\n    let index = this.seen.indexOf(value);\n    let path = [this.keys[index]];\n    for (let i = index; i >= 0; i--) {\n      let sub = this.seen[i];\n      if (sub && getAttr(sub, path[0]) === value) {\n        value = sub;\n        path.unshift(this.keys[i]);\n      }\n    }\n    return '~' + path.join('.');\n  }\n\n  private truncateString(s: string): string {\n    if (s.length > this.maxStringLength) {\n      return s.slice(0, this.maxStringLength) + '...';\n    }\n    return s;\n  }\n\n  private truncateArray(arr: any[], depth = 0): any[] {\n    let length = 0;\n    let dst: any = [];\n    for (let i = 0; i < arr.length; i++) {\n      let el = arr[i];\n      dst.push(this.truncate(el, i.toString(), depth));\n\n      length++;\n      if (length >= this.maxArrayLength) {\n        break;\n      }\n    }\n    return dst;\n  }\n\n  private truncateObject(obj: any, depth = 0): any {\n    let length = 0;\n    let dst = {};\n    for (let key in obj) {\n      if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n        continue;\n      }\n\n      if (this.filterKey(key, dst)) continue;\n\n      let value = getAttr(obj, key);\n\n      if (value === undefined || typeof value === 'function') {\n        continue;\n      }\n      dst[key] = this.truncate(value, key, depth);\n\n      length++;\n      if (length >= this.maxObjectLength) {\n        break;\n      }\n    }\n    return dst;\n  }\n\n  private filterKey(key: string, obj: any): boolean {\n    if (\n      (this.keysAllowlist.length > 0 && !isInList(key, this.keysAllowlist)) ||\n      (this.keysAllowlist.length === 0 && isInList(key, this.keysBlocklist))\n    ) {\n      obj[key] = FILTERED;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport function truncate(value: any, opts: ITruncatorOptions = {}): any {\n  let t = new Truncator(opts);\n  return t.truncate(value);\n}\n\nfunction getAttr(obj: any, attr: string): any {\n  // Ignore browser specific exception trying to read an attribute (#79).\n  try {\n    return obj[attr];\n  } catch (_) {\n    return;\n  }\n}\n\nfunction objectType(obj: any): string {\n  let s = Object.prototype.toString.apply(obj);\n  return s.slice('[object '.length, -1);\n}\n\nfunction isInList(key: string, list: any[]): boolean {\n  for (let v of list) {\n    if (v === key) {\n      return true;\n    }\n    if (v instanceof RegExp) {\n      if (key.match(v)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","export interface IMetric {\n  isRecording(): boolean;\n  startSpan(name: string, startTime?: Date): void;\n  endSpan(name: string, endTime?: Date): void;\n  _incGroup(name: string, ms: number): void;\n}\n\nexport class Span {\n  _metric: IMetric | null;\n\n  name: string;\n  startTime: Date | null;\n  endTime: Date;\n\n  _dur = 0;\n  _level = 0;\n\n  constructor(metric: IMetric, name: string, startTime?: Date) {\n    this._metric = metric;\n\n    this.name = name;\n    this.startTime = startTime || new Date();\n  }\n\n  end(endTime?: Date) {\n    this.endTime = endTime ? endTime : new Date();\n\n    this._dur += this.endTime.getTime() - this.startTime!.getTime();\n    this._metric!._incGroup(this.name, this._dur);\n    this._metric = null;\n  }\n\n  _pause() {\n    if (this._paused()) {\n      return;\n    }\n    let now = new Date();\n    this._dur += now.getTime() - this.startTime!.getTime();\n    this.startTime = null;\n  }\n\n  _resume() {\n    if (!this._paused()) {\n      return;\n    }\n    this.startTime = new Date();\n  }\n\n  _paused() {\n    return this.startTime == null;\n  }\n}\n\nexport class BaseMetric implements IMetric {\n  startTime: Date;\n  endTime: Date;\n\n  _spans = {};\n  _groups = {};\n\n  constructor() {\n    this.startTime = new Date();\n  }\n\n  end(endTime?: Date): void {\n    if (!this.endTime) {\n      this.endTime = endTime || new Date();\n    }\n  }\n\n  isRecording(): boolean {\n    return true;\n  }\n\n  startSpan(name: string, startTime?: Date): void {\n    let span = this._spans[name];\n    if (span) {\n      span._level++;\n    } else {\n      span = new Span(this, name, startTime);\n      this._spans[name] = span;\n    }\n  }\n\n  endSpan(name: string, endTime?: Date): void {\n    let span = this._spans[name];\n    if (!span) {\n      console.error('airbrake: span=%s does not exist', name);\n      return;\n    }\n\n    if (span._level > 0) {\n      span._level--;\n    } else {\n      span.end(endTime);\n      delete this._spans[span.name];\n    }\n  }\n\n  _incGroup(name: string, ms: number): void {\n    this._groups[name] = (this._groups[name] || 0) + ms;\n  }\n\n  _duration(): number {\n    if (!this.endTime) {\n      this.endTime = new Date();\n    }\n    return this.endTime.getTime() - this.startTime.getTime();\n  }\n}\n\nexport class NoopMetric implements IMetric {\n  isRecording(): boolean {\n    return false;\n  }\n  startSpan(_name: string, _startTime?: Date): void {}\n  endSpan(_name: string, _startTime?: Date): void {}\n  _incGroup(_name: string, _ms: number): void {}\n}\n","import { IMetric, NoopMetric } from './metrics';\n\ninterface IHistoryRecord {\n  type: string;\n  date?: Date;\n  [key: string]: any;\n}\n\ninterface IMap {\n  [key: string]: any;\n}\n\nexport class Scope {\n  _noopMetric = new NoopMetric();\n  _routeMetric: IMetric;\n  _queueMetric: IMetric;\n\n  _context: IMap = {};\n\n  _historyMaxLen = 20;\n  _history: IHistoryRecord[] = [];\n  _lastRecord: IHistoryRecord;\n\n  clone(): Scope {\n    const clone = new Scope();\n    clone._context = { ...this._context };\n    clone._history = this._history.slice();\n    return clone;\n  }\n\n  setContext(context: IMap) {\n    this._context = { ...this._context, ...context };\n  }\n\n  context(): IMap {\n    const ctx = { ...this._context };\n    if (this._history.length > 0) {\n      ctx.history = this._history.slice();\n    }\n    return ctx;\n  }\n\n  pushHistory(state: IHistoryRecord): void {\n    if (this._isDupState(state)) {\n      if (this._lastRecord.num) {\n        this._lastRecord.num++;\n      } else {\n        this._lastRecord.num = 2;\n      }\n      return;\n    }\n\n    if (!state.date) {\n      state.date = new Date();\n    }\n    this._history.push(state);\n    this._lastRecord = state;\n\n    if (this._history.length > this._historyMaxLen) {\n      this._history = this._history.slice(-this._historyMaxLen);\n    }\n  }\n\n  private _isDupState(state): boolean {\n    if (!this._lastRecord) {\n      return false;\n    }\n    for (let key in state) {\n      if (!state.hasOwnProperty(key) || key === 'date') {\n        continue;\n      }\n      if (state[key] !== this._lastRecord[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  routeMetric(): IMetric {\n    return this._routeMetric || this._noopMetric;\n  }\n\n  setRouteMetric(metric: IMetric) {\n    this._routeMetric = metric;\n  }\n\n  queueMetric(): IMetric {\n    return this._queueMetric || this._noopMetric;\n  }\n\n  setQueueMetric(metric: IMetric) {\n    this._queueMetric = metric;\n  }\n}\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","import { INoticeError, INoticeFrame } from '../notice';\n\nimport ErrorStackParser from 'error-stack-parser';\n\nconst hasConsole = typeof console === 'object' && console.warn;\n\nexport interface IStackFrame {\n  functionName?: string;\n  fileName?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\nexport interface IError extends Error, IStackFrame {\n  noStack?: boolean;\n}\n\nfunction parse(err: IError): IStackFrame[] {\n  try {\n    return ErrorStackParser.parse(err);\n  } catch (parseErr) {\n    if (hasConsole && err.stack) {\n      // @ts-ignore\n      console.warn('ErrorStackParser:', parseErr.toString(), err.stack);\n    }\n  }\n\n  if (err.fileName) {\n    return [err];\n  }\n\n  return [];\n}\n\nexport function espProcessor(err: IError): INoticeError {\n  let backtrace: INoticeFrame[] = [];\n\n  if (err.noStack) {\n    backtrace.push({\n      function: err.functionName || '',\n      file: err.fileName || '',\n      line: err.lineNumber || 0,\n      column: err.columnNumber || 0,\n    });\n  } else {\n    let frames = parse(err);\n    if (frames.length === 0) {\n      try {\n        throw new Error('fake');\n      } catch (fakeErr) {\n        // @ts-ignore\n        frames = parse(fakeErr);\n        frames.shift();\n        frames.shift();\n      }\n    }\n\n    for (let frame of frames) {\n      backtrace.push({\n        function: frame.functionName || '',\n        file: frame.fileName || '',\n        line: frame.lineNumber || 0,\n        column: frame.columnNumber || 0,\n      });\n    }\n  }\n\n  let type: string = err.name ? err.name : '';\n  let msg: string = err.message ? String(err.message) : String(err);\n\n  return {\n    type,\n    message: msg,\n    backtrace,\n  };\n}\n","import { INotice } from '../notice';\n\nlet re = new RegExp(\n  [\n    '^',\n    '\\\\[(\\\\$.+)\\\\]', // type\n    '\\\\s',\n    '([\\\\s\\\\S]+)', // message\n    '$',\n  ].join('')\n);\n\nexport function angularMessageFilter(notice: INotice): INotice {\n  let err = notice.errors![0];\n  if (err.type !== '' && err.type !== 'Error') {\n    return notice;\n  }\n\n  let m = err.message.match(re);\n  if (m !== null) {\n    err.type = m[1];\n    err.message = m[2];\n  }\n\n  return notice;\n}\n","import { INotice } from '../notice';\nimport { Filter } from './filter';\n\nexport function makeDebounceFilter(): Filter {\n  let lastNoticeJSON: string;\n  let timeout;\n\n  return (notice: INotice): INotice | null => {\n    let s = JSON.stringify(notice.errors);\n    if (s === lastNoticeJSON) {\n      return null;\n    }\n\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    lastNoticeJSON = s;\n    timeout = setTimeout(() => {\n      lastNoticeJSON = '';\n    }, 1000);\n\n    return notice;\n  };\n}\n","import { INotice } from '../notice';\n\nconst IGNORED_MESSAGES = [\n  'Script error',\n  'Script error.',\n  'InvalidAccessError',\n];\n\nexport function ignoreNoiseFilter(notice: INotice): INotice | null {\n  let err = notice.errors![0];\n  if (err.type === '' && IGNORED_MESSAGES.indexOf(err.message) !== -1) {\n    return null;\n  }\n\n  if (err.backtrace && err.backtrace.length > 0) {\n    let frame = err.backtrace[0];\n    if (frame.file === '<anonymous>') {\n      return null;\n    }\n  }\n\n  return notice;\n}\n","import { INotice } from '../notice';\n\nlet re = new RegExp(\n  [\n    '^',\n    'Uncaught\\\\s',\n    '(.+?)', // type\n    ':\\\\s',\n    '(.+)', // message\n    '$',\n  ].join('')\n);\nexport function uncaughtMessageFilter(notice: INotice): INotice {\n  let err = notice.errors![0];\n  if (err.type !== '' && err.type !== 'Error') {\n    return notice;\n  }\n\n  let m = err.message.match(re);\n  if (m !== null) {\n    err.type = m[1];\n    err.message = m[2];\n  }\n\n  return notice;\n}\n","export interface IHttpRequest {\n  method: string;\n  url: string;\n  body?: string;\n  timeout?: number;\n  headers?: any;\n}\n\nexport interface IHttpResponse {\n  json: any;\n}\n\nexport type Requester = (req: IHttpRequest) => Promise<IHttpResponse>;\n\nexport let errors = {\n  unauthorized: new Error(\n    'airbrake: unauthorized: project id or key are wrong'\n  ),\n  ipRateLimited: new Error('airbrake: IP is rate limited'),\n};\n","import { errors, IHttpRequest, IHttpResponse } from './api';\n\nlet rateLimitReset = 0;\n\nexport function request(req: IHttpRequest): Promise<IHttpResponse> {\n  let utime = Date.now() / 1000;\n  if (utime < rateLimitReset) {\n    return Promise.reject(errors.ipRateLimited);\n  }\n\n  let opt = {\n    method: req.method,\n    body: req.body,\n    headers: req.headers,\n  };\n  return fetch(req.url, opt).then((resp: Response) => {\n    if (resp.status === 401) {\n      throw errors.unauthorized;\n    }\n\n    if (resp.status === 429) {\n      let s = resp.headers.get('X-RateLimit-Delay');\n      if (!s) {\n        throw errors.ipRateLimited;\n      }\n\n      let n = parseInt(s, 10);\n      if (n > 0) {\n        rateLimitReset = Date.now() / 1000 + n;\n      }\n\n      throw errors.ipRateLimited;\n    }\n\n    if (resp.status === 204) {\n      return { json: null };\n    }\n    if (resp.status === 404) {\n      throw new Error('404 Not Found');\n    }\n\n    if (resp.status >= 200 && resp.status < 300) {\n      return resp.json().then((json) => {\n        return { json };\n      });\n    }\n\n    if (resp.status >= 400 && resp.status < 500) {\n      return resp.json().then((json) => {\n        let err = new Error(json.message);\n        throw err;\n      });\n    }\n\n    return resp.text().then((body) => {\n      let err = new Error(\n        `airbrake: fetch: unexpected response: code=${resp.status} body='${body}'`\n      );\n      throw err;\n    });\n  });\n}\n","import * as request_lib from 'request';\n\nimport { errors, IHttpRequest, IHttpResponse, Requester } from './api';\n\ntype requestAPI = request_lib.RequestAPI<\n  request_lib.Request,\n  request_lib.CoreOptions,\n  request_lib.RequiredUriUrl\n>;\n\nexport function makeRequester(api: requestAPI): Requester {\n  return (req: IHttpRequest): Promise<IHttpResponse> => {\n    return request(req, api);\n  };\n}\n\nlet rateLimitReset = 0;\n\nfunction request(req: IHttpRequest, api: requestAPI): Promise<IHttpResponse> {\n  let utime = Date.now() / 1000;\n  if (utime < rateLimitReset) {\n    return Promise.reject(errors.ipRateLimited);\n  }\n\n  return new Promise((resolve, reject) => {\n    api(\n      {\n        url: req.url,\n        method: req.method,\n        body: req.body,\n        headers: {\n          'content-type': 'application/json',\n        },\n        timeout: req.timeout,\n      },\n      (error: any, resp: request_lib.RequestResponse, body: any): void => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        if (!resp.statusCode) {\n          error = new Error(\n            `airbrake: request: response statusCode is ${resp.statusCode}`\n          );\n          reject(error);\n          return;\n        }\n\n        if (resp.statusCode === 401) {\n          reject(errors.unauthorized);\n          return;\n        }\n\n        if (resp.statusCode === 429) {\n          reject(errors.ipRateLimited);\n\n          let h = resp.headers['x-ratelimit-delay'];\n          if (!h) {\n            return;\n          }\n\n          let s: string;\n          if (typeof h === 'string') {\n            s = h;\n          } else if (h instanceof Array) {\n            s = h[0];\n          } else {\n            return;\n          }\n\n          let n = parseInt(s, 10);\n          if (n > 0) {\n            rateLimitReset = Date.now() / 1000 + n;\n          }\n\n          return;\n        }\n\n        if (resp.statusCode === 204) {\n          resolve({ json: null });\n          return;\n        }\n\n        if (resp.statusCode >= 200 && resp.statusCode < 300) {\n          let json;\n          try {\n            json = JSON.parse(body);\n          } catch (err) {\n            reject(err);\n            return;\n          }\n          resolve(json);\n          return;\n        }\n\n        if (resp.statusCode >= 400 && resp.statusCode < 500) {\n          let json;\n          try {\n            json = JSON.parse(body);\n          } catch (err) {\n            reject(err);\n            return;\n          }\n          error = new Error(json.message);\n          reject(error);\n          return;\n        }\n\n        body = body.trim();\n        error = new Error(\n          `airbrake: node: unexpected response: code=${resp.statusCode} body='${body}'`\n        );\n        reject(error);\n      }\n    );\n  });\n}\n","import { IOptions } from '../options';\nimport { Requester } from './api';\nimport { request as fetchRequest } from './fetch';\nimport { makeRequester as makeNodeRequester } from './node';\n\nexport type { Requester };\n\nexport function makeRequester(opts: IOptions): Requester {\n  if (opts.request) {\n    return makeNodeRequester(opts.request);\n  }\n  return fetchRequest;\n}\n","let tdigest;\nexport let hasTdigest = false;\n\ntry {\n  tdigest = require('tdigest');\n  hasTdigest = true;\n} catch (err) {}\n\ninterface ICentroid {\n  mean: number;\n  n: number;\n}\n\ninterface ICentroids {\n  each(fn: (c: ICentroid) => void): void;\n}\n\ninterface ITDigest {\n  centroids: ICentroids;\n\n  push(x: number);\n  compress();\n}\n\ninterface ITDigestCentroids {\n  mean: number[];\n  count: number[];\n}\n\nexport class TDigestStat {\n  count = 0;\n  sum = 0;\n  sumsq = 0;\n  _td = new tdigest.Digest();\n\n  add(ms: number) {\n    if (ms === 0) {\n      ms = 0.00001;\n    }\n    this.count += 1;\n    this.sum += ms;\n    this.sumsq += ms * ms;\n    if (this._td) {\n      this._td.push(ms);\n    }\n  }\n\n  toJSON() {\n    return {\n      count: this.count,\n      sum: this.sum,\n      sumsq: this.sumsq,\n      tdigestCentroids: tdigestCentroids(this._td),\n    };\n  }\n}\n\nexport class TDigestStatGroups extends TDigestStat {\n  groups: { [key: string]: TDigestStat } = {};\n\n  addGroups(totalMs: number, groups: { [key: string]: number }) {\n    this.add(totalMs);\n    for (const name in groups) {\n      if (groups.hasOwnProperty(name)) {\n        this.addGroup(name, groups[name]);\n      }\n    }\n  }\n\n  addGroup(name: string, ms: number) {\n    let stat = this.groups[name];\n    if (!stat) {\n      stat = new TDigestStat();\n      this.groups[name] = stat;\n    }\n    stat.add(ms);\n  }\n\n  toJSON() {\n    return {\n      count: this.count,\n      sum: this.sum,\n      sumsq: this.sumsq,\n      tdigestCentroids: tdigestCentroids(this._td),\n      groups: this.groups,\n    };\n  }\n}\n\nfunction tdigestCentroids(td: ITDigest): ITDigestCentroids {\n  let means: number[] = [];\n  let counts: number[] = [];\n  td.centroids.each((c: ICentroid) => {\n    means.push(c.mean);\n    counts.push(c.n);\n  });\n  return {\n    mean: means,\n    count: counts,\n  };\n}\n","import { makeRequester, Requester } from './http_req';\nimport { IOptions } from './options';\nimport { hasTdigest, TDigestStat } from './tdshared';\n\nconst FLUSH_INTERVAL = 15000; // 15 seconds\n\ninterface IQueryKey {\n  method: string;\n  route: string;\n  query: string;\n  func: string;\n  file: string;\n  line: number;\n  time: Date;\n}\n\nexport class QueryInfo {\n  method = '';\n  route = '';\n  query = '';\n  func = '';\n  file = '';\n  line = 0;\n  startTime = new Date();\n  endTime: Date;\n\n  constructor(query = '') {\n    this.query = query;\n  }\n\n  _duration(): number {\n    if (!this.endTime) {\n      this.endTime = new Date();\n    }\n    return this.endTime.getTime() - this.startTime.getTime();\n  }\n}\n\nexport class QueriesStats {\n  _opt: IOptions;\n  _url: string;\n  _requester: Requester;\n\n  _m: { [key: string]: TDigestStat } = {};\n  _timer;\n\n  constructor(opt: IOptions) {\n    this._opt = opt;\n    this._url = `${opt.host}/api/v5/projects/${opt.projectId}/queries-stats?key=${opt.projectKey}`;\n    this._requester = makeRequester(opt);\n  }\n\n  start(query = ''): QueryInfo {\n    return new QueryInfo(query);\n  }\n\n  notify(q: QueryInfo): void {\n    if (!hasTdigest) {\n      return;\n    }\n\n    if (!this._opt.performanceStats) {\n      return;\n    }\n    if (!this._opt.queryStats) {\n      return;\n    }\n\n    let ms = q._duration();\n\n    const minute = 60 * 1000;\n    let startTime = new Date(\n      Math.floor(q.startTime.getTime() / minute) * minute\n    );\n\n    let key: IQueryKey = {\n      method: q.method,\n      route: q.route,\n      query: q.query,\n      func: q.func,\n      file: q.file,\n      line: q.line,\n      time: startTime,\n    };\n    let keyStr = JSON.stringify(key);\n\n    let stat = this._m[keyStr];\n    if (!stat) {\n      stat = new TDigestStat();\n      this._m[keyStr] = stat;\n    }\n\n    stat.add(ms);\n\n    if (this._timer) {\n      return;\n    }\n    this._timer = setTimeout(() => {\n      this._flush();\n    }, FLUSH_INTERVAL);\n  }\n\n  _flush(): void {\n    let queries = [];\n    for (let keyStr in this._m) {\n      if (!this._m.hasOwnProperty(keyStr)) {\n        continue;\n      }\n\n      let key: IQueryKey = JSON.parse(keyStr);\n      let v = {\n        ...key,\n        ...this._m[keyStr].toJSON(),\n      };\n\n      // @ts-ignore\n      queries.push(v);\n    }\n\n    this._m = {};\n    this._timer = null;\n\n    let outJSON = JSON.stringify({\n      environment: this._opt.environment,\n      queries,\n    });\n    let req = {\n      method: 'POST',\n      url: this._url,\n      body: outJSON,\n    };\n    this._requester(req)\n      .then((_resp) => {\n        // nothing\n      })\n      .catch((err) => {\n        if (console.error) {\n          console.error('can not report queries stats', err);\n        }\n      });\n  }\n}\n","import { makeRequester, Requester } from './http_req';\nimport { BaseMetric } from './metrics';\nimport { IOptions } from './options';\nimport { hasTdigest, TDigestStatGroups } from './tdshared';\n\nconst FLUSH_INTERVAL = 15000; // 15 seconds\n\ninterface IQueueKey {\n  queue: string;\n  time: Date;\n}\n\nexport class QueueMetric extends BaseMetric {\n  queue: string;\n\n  constructor(queue: string) {\n    super();\n    this.queue = queue;\n    this.startTime = new Date();\n  }\n}\n\nexport class QueuesStats {\n  _opt: IOptions;\n  _url: string;\n  _requester: Requester;\n\n  _m: { [key: string]: TDigestStatGroups } = {};\n  _timer;\n\n  constructor(opt: IOptions) {\n    this._opt = opt;\n    this._url = `${opt.host}/api/v5/projects/${opt.projectId}/queues-stats?key=${opt.projectKey}`;\n    this._requester = makeRequester(opt);\n  }\n\n  notify(q: QueueMetric): void {\n    if (!hasTdigest) {\n      return;\n    }\n\n    if (!this._opt.performanceStats) {\n      return;\n    }\n    if (!this._opt.queueStats) {\n      return;\n    }\n\n    let ms = q._duration();\n    if (ms === 0) {\n      ms = 0.00001;\n    }\n\n    const minute = 60 * 1000;\n    let startTime = new Date(\n      Math.floor(q.startTime.getTime() / minute) * minute\n    );\n\n    let key: IQueueKey = {\n      queue: q.queue,\n      time: startTime,\n    };\n    let keyStr = JSON.stringify(key);\n\n    let stat = this._m[keyStr];\n    if (!stat) {\n      stat = new TDigestStatGroups();\n      this._m[keyStr] = stat;\n    }\n\n    stat.addGroups(ms, q._groups);\n\n    if (this._timer) {\n      return;\n    }\n    this._timer = setTimeout(() => {\n      this._flush();\n    }, FLUSH_INTERVAL);\n  }\n\n  _flush(): void {\n    let queues = [];\n    for (let keyStr in this._m) {\n      if (!this._m.hasOwnProperty(keyStr)) {\n        continue;\n      }\n\n      let key: IQueueKey = JSON.parse(keyStr);\n      let v = {\n        ...key,\n        ...this._m[keyStr].toJSON(),\n      };\n\n      // @ts-ignore\n      queues.push(v);\n    }\n\n    this._m = {};\n    this._timer = null;\n\n    let outJSON = JSON.stringify({\n      environment: this._opt.environment,\n      queues,\n    });\n    let req = {\n      method: 'POST',\n      url: this._url,\n      body: outJSON,\n    };\n    this._requester(req)\n      .then((_resp) => {\n        // nothing\n      })\n      .catch((err) => {\n        if (console.error) {\n          console.error('can not report queues breakdowns', err);\n        }\n      });\n  }\n}\n","import { makeRequester, Requester } from './http_req';\nimport { BaseMetric } from './metrics';\nimport { IOptions } from './options';\nimport { hasTdigest, TDigestStat, TDigestStatGroups } from './tdshared';\n\nconst FLUSH_INTERVAL = 15000; // 15 seconds\n\ninterface IRouteKey {\n  method: string;\n  route: string;\n  statusCode: number;\n  time: Date;\n}\n\ninterface IBreakdownKey {\n  method: string;\n  route: string;\n  responseType: string;\n  time: Date;\n}\n\nexport class RouteMetric extends BaseMetric {\n  method: string;\n  route: string;\n  statusCode: number;\n  contentType: string;\n\n  constructor(method = '', route = '', statusCode = 0, contentType = '') {\n    super();\n    this.method = method;\n    this.route = route;\n    this.statusCode = statusCode;\n    this.contentType = contentType;\n    this.startTime = new Date();\n  }\n}\n\nexport class RoutesStats {\n  _opt: IOptions;\n  _url: string;\n  _requester: Requester;\n\n  _m: { [key: string]: TDigestStat } = {};\n  _timer;\n\n  constructor(opt: IOptions) {\n    this._opt = opt;\n    this._url = `${opt.host}/api/v5/projects/${opt.projectId}/routes-stats?key=${opt.projectKey}`;\n    this._requester = makeRequester(opt);\n  }\n\n  notify(req: RouteMetric): void {\n    if (!hasTdigest) {\n      return;\n    }\n\n    if (!this._opt.performanceStats) {\n      return;\n    }\n\n    let ms = req._duration();\n\n    const minute = 60 * 1000;\n    let startTime = new Date(\n      Math.floor(req.startTime.getTime() / minute) * minute\n    );\n\n    let key: IRouteKey = {\n      method: req.method,\n      route: req.route,\n      statusCode: req.statusCode,\n      time: startTime,\n    };\n    let keyStr = JSON.stringify(key);\n\n    let stat = this._m[keyStr];\n    if (!stat) {\n      stat = new TDigestStat();\n      this._m[keyStr] = stat;\n    }\n\n    stat.add(ms);\n\n    if (this._timer) {\n      return;\n    }\n    this._timer = setTimeout(() => {\n      this._flush();\n    }, FLUSH_INTERVAL);\n  }\n\n  _flush(): void {\n    let routes = [];\n    for (let keyStr in this._m) {\n      if (!this._m.hasOwnProperty(keyStr)) {\n        continue;\n      }\n\n      let key: IRouteKey = JSON.parse(keyStr);\n      let v = {\n        ...key,\n        ...this._m[keyStr].toJSON(),\n      };\n\n      // @ts-ignore\n      routes.push(v);\n    }\n\n    this._m = {};\n    this._timer = null;\n\n    let outJSON = JSON.stringify({\n      environment: this._opt.environment,\n      routes,\n    });\n    let req = {\n      method: 'POST',\n      url: this._url,\n      body: outJSON,\n    };\n    this._requester(req)\n      .then((_resp) => {\n        // nothing\n      })\n      .catch((err) => {\n        if (console.error) {\n          console.error('can not report routes stats', err);\n        }\n      });\n  }\n}\n\nexport class RoutesBreakdowns {\n  _opt: IOptions;\n  _url: string;\n  _requester: Requester;\n\n  _m: { [key: string]: TDigestStatGroups } = {};\n  _timer;\n\n  constructor(opt: IOptions) {\n    this._opt = opt;\n    this._url = `${opt.host}/api/v5/projects/${opt.projectId}/routes-breakdowns?key=${opt.projectKey}`;\n    this._requester = makeRequester(opt);\n  }\n\n  notify(req: RouteMetric): void {\n    if (!hasTdigest) {\n      return;\n    }\n\n    if (!this._opt.performanceStats) {\n      return;\n    }\n\n    if (\n      req.statusCode < 200 ||\n      (req.statusCode >= 300 && req.statusCode < 400) ||\n      req.statusCode === 404 ||\n      Object.keys(req._groups).length === 0\n    ) {\n      return;\n    }\n\n    let ms = req._duration();\n    if (ms === 0) {\n      ms = 0.00001;\n    }\n\n    const minute = 60 * 1000;\n    let startTime = new Date(\n      Math.floor(req.startTime.getTime() / minute) * minute\n    );\n\n    let key: IBreakdownKey = {\n      method: req.method,\n      route: req.route,\n      responseType: this._responseType(req),\n      time: startTime,\n    };\n    let keyStr = JSON.stringify(key);\n\n    let stat = this._m[keyStr];\n    if (!stat) {\n      stat = new TDigestStatGroups();\n      this._m[keyStr] = stat;\n    }\n\n    stat.addGroups(ms, req._groups);\n\n    if (this._timer) {\n      return;\n    }\n    this._timer = setTimeout(() => {\n      this._flush();\n    }, FLUSH_INTERVAL);\n  }\n\n  _flush(): void {\n    let routes = [];\n    for (let keyStr in this._m) {\n      if (!this._m.hasOwnProperty(keyStr)) {\n        continue;\n      }\n\n      let key: IBreakdownKey = JSON.parse(keyStr);\n      let v = {\n        ...key,\n        ...this._m[keyStr].toJSON(),\n      };\n\n      // @ts-ignore\n      routes.push(v);\n    }\n\n    this._m = {};\n    this._timer = null;\n\n    let outJSON = JSON.stringify({\n      environment: this._opt.environment,\n      routes,\n    });\n    let req = {\n      method: 'POST',\n      url: this._url,\n      body: outJSON,\n    };\n    this._requester(req)\n      .then((_resp) => {\n        // nothing\n      })\n      .catch((err) => {\n        if (console.error) {\n          console.error('can not report routes breakdowns', err);\n        }\n      });\n  }\n\n  _responseType(req: RouteMetric): string {\n    if (req.statusCode >= 500) {\n      return '5xx';\n    }\n    if (req.statusCode >= 400) {\n      return '4xx';\n    }\n    if (!req.contentType) {\n      return '';\n    }\n    const s = req.contentType.split(';')[0].split('/');\n    return s[s.length - 1];\n  }\n}\n","export const NOTIFIER_NAME = 'airbrake-js/browser';\nexport const NOTIFIER_VERSION = '2.1.8';\nexport const NOTIFIER_URL =\n  'https://github.com/airbrake/airbrake-js/tree/master/packages/browser';\n","import { makeRequester, Requester } from './http_req';\nimport { IOptions } from './options';\nimport { NOTIFIER_NAME, NOTIFIER_VERSION } from './version';\n\n// API version to poll.\nconst API_VER = '2020-06-18';\n\n// How frequently we should poll the config API.\nconst DEFAULT_INTERVAL = 600000; // 10 minutes\n\nconst NOTIFIER_INFO = {\n  notifier_name: NOTIFIER_NAME,\n  notifier_version: NOTIFIER_VERSION,\n  os:\n    typeof window !== 'undefined' &&\n    window.navigator &&\n    window.navigator.userAgent\n      ? window.navigator.userAgent\n      : undefined,\n  language: 'JavaScript',\n};\n\n// Remote config settings.\nconst ERROR_SETTING = 'errors';\nconst APM_SETTING = 'apm';\n\ninterface IRemoteConfig {\n  project_id: number | null;\n  updated_at: number;\n  poll_sec: number;\n  config_route: string;\n  settings: IRemoteConfigSetting[];\n}\n\ninterface IRemoteConfigSetting {\n  name: string;\n  enabled: boolean;\n  endpoint: string;\n}\n\ntype Entries<T> = {\n  [K in keyof T]: [K, T[K]];\n}[keyof T][];\n\nexport class RemoteSettings {\n  _opt: IOptions;\n  _requester: Requester;\n  _data: SettingsData;\n  _origErrorNotifications: boolean | undefined;\n  _origPerformanceStats: boolean | undefined;\n\n  constructor(opt: IOptions) {\n    this._opt = opt;\n    this._requester = makeRequester(opt);\n\n    this._data = new SettingsData(opt.projectId, {\n      project_id: null,\n      poll_sec: 0,\n      updated_at: 0,\n      config_route: '',\n      settings: [],\n    });\n\n    this._origErrorNotifications = opt.errorNotifications;\n    this._origPerformanceStats = opt.performanceStats;\n  }\n\n  poll(): any {\n    // First request is immediate. When it's done, we cancel it since we want to\n    // change interval time to the default value.\n    const pollerId = setInterval(() => {\n      this._doRequest();\n      clearInterval(pollerId);\n    }, 0);\n\n    // Second fetch is what always runs in background.\n    return setInterval(this._doRequest.bind(this), DEFAULT_INTERVAL);\n  }\n\n  _doRequest(): void {\n    this._requester(this._requestParams(this._opt))\n      .then((resp) => {\n        this._data.merge(resp.json);\n\n        this._opt.host = this._data.errorHost();\n        this._opt.apmHost = this._data.apmHost();\n\n        this._processErrorNotifications(this._data);\n        this._processPerformanceStats(this._data);\n      })\n      .catch((_) => {\n        return;\n      });\n  }\n\n  _requestParams(opt: IOptions): any {\n    return {\n      method: 'GET',\n      url: this._pollUrl(opt),\n      headers: {\n        Accept: 'application/json',\n        'Cache-Control': 'no-cache,no-store',\n      },\n    };\n  }\n\n  _pollUrl(opt: IOptions): string {\n    const url = this._data.configRoute(opt.remoteConfigHost!);\n    let queryParams = '?';\n\n    for (const [key, value] of this._entries(NOTIFIER_INFO)) {\n      queryParams += `&${encodeURIComponent(key)}=${encodeURIComponent(value!)}`;\n    }\n\n    return url + queryParams;\n  }\n\n  _processErrorNotifications(data: SettingsData): void {\n    if (!this._origErrorNotifications) {\n      return;\n    }\n    this._opt.errorNotifications = data.errorNotifications();\n  }\n\n  _processPerformanceStats(data: SettingsData): void {\n    if (!this._origPerformanceStats) {\n      return;\n    }\n    this._opt.performanceStats = data.performanceStats();\n  }\n\n  // Polyfill from:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries#polyfill\n  _entries<T>(obj: T): Entries<T> {\n    // @ts-ignore\n    const ownProps = Object.keys(obj);\n    let i = ownProps.length;\n    const resArray = new Array(i);\n\n    while (i--) resArray[i] = [ownProps[i], obj[ownProps[i]]];\n\n    return resArray;\n  }\n}\n\nexport class SettingsData {\n  _projectId: number;\n  _data: IRemoteConfig;\n\n  constructor(projectId: number, data: IRemoteConfig) {\n    this._projectId = projectId;\n    this._data = data;\n  }\n\n  merge(other: IRemoteConfig) {\n    this._data = { ...this._data, ...other };\n  }\n\n  configRoute(remoteConfigHost: string): string {\n    const host = remoteConfigHost.replace(/\\/$/, '');\n    const configRoute = this._data.config_route;\n\n    if (\n      configRoute === null ||\n      configRoute === undefined ||\n      configRoute === ''\n    ) {\n      return `${host}/${API_VER}/config/${this._projectId}/config.json`;\n    } else {\n      return `${host}/${configRoute}`;\n    }\n  }\n\n  errorNotifications(): boolean {\n    const s = this._findSetting(ERROR_SETTING);\n    if (s === null) {\n      return true;\n    }\n\n    return s.enabled;\n  }\n\n  performanceStats(): boolean {\n    const s = this._findSetting(APM_SETTING);\n    if (s === null) {\n      return true;\n    }\n\n    return s.enabled;\n  }\n\n  errorHost(): string | null {\n    const s = this._findSetting(ERROR_SETTING);\n    if (s === null) {\n      return null;\n    }\n\n    return s.endpoint;\n  }\n\n  apmHost(): string | null{\n    const s = this._findSetting(APM_SETTING);\n    if (s === null) {\n      return null;\n    }\n\n    return s.endpoint;\n  }\n\n  _findSetting(name: string): IRemoteConfigSetting | null {\n    const settings = this._data.settings;\n    if (settings === null || settings === undefined) {\n      return null;\n    }\n\n    const setting = settings.find((s) => {\n      return s.name === name;\n    });\n\n    if (setting === undefined) {\n      return null;\n    }\n\n    return setting;\n  }\n}\n","import { IFuncWrapper } from './func_wrapper';\nimport { jsonifyNotice } from './jsonify_notice';\nimport { INotice } from './notice';\nimport { Scope } from './scope';\n\nimport { espProcessor } from './processor/esp';\nimport { Processor } from './processor/processor';\n\nimport { angularMessageFilter } from './filter/angular_message';\nimport { makeDebounceFilter } from './filter/debounce';\nimport { Filter } from './filter/filter';\nimport { ignoreNoiseFilter } from './filter/ignore_noise';\nimport { uncaughtMessageFilter } from './filter/uncaught_message';\n\nimport { makeRequester, Requester } from './http_req';\n\nimport { IOptions } from './options';\nimport { QueriesStats } from './queries';\nimport { QueueMetric, QueuesStats } from './queues';\nimport { RouteMetric, RoutesBreakdowns, RoutesStats } from './routes';\nimport { NOTIFIER_NAME, NOTIFIER_VERSION, NOTIFIER_URL } from './version';\nimport { PerformanceFilter } from './filter/performance_filter';\nimport { RemoteSettings } from './remote_settings';\n\nexport class BaseNotifier {\n  routes: Routes;\n  queues: Queues;\n  queries: QueriesStats;\n\n  _opt: IOptions;\n  _url: string;\n\n  _processor: Processor;\n  _requester: Requester;\n  _filters: Filter[] = [];\n  _performanceFilters: PerformanceFilter[] = [];\n  _scope = new Scope();\n\n  _onClose: (() => void)[] = [];\n\n  constructor(opt: IOptions) {\n    if (!opt.projectId || !opt.projectKey) {\n      throw new Error('airbrake: projectId and projectKey are required');\n    }\n\n    this._opt = opt;\n    this._opt.host = this._opt.host || 'https://api.airbrake.io';\n    this._opt.remoteConfigHost =\n      this._opt.remoteConfigHost || 'https://notifier-configs.airbrake.io';\n    this._opt.apmHost = this._opt.apmHost || 'https://api.airbrake.io';\n    this._opt.timeout = this._opt.timeout || 10000;\n    this._opt.keysBlocklist = this._opt.keysBlocklist || [/password/, /secret/];\n    this._url = `${this._opt.host}/api/v3/projects/${this._opt.projectId}/notices?key=${this._opt.projectKey}`;\n\n    this._opt.errorNotifications = this._opt.errorNotifications !== false;\n    this._opt.performanceStats = this._opt.performanceStats !== false;\n\n    this._opt.queryStats = this._opt.queryStats !== false;\n    this._opt.queueStats = this._opt.queueStats !== false;\n\n    this._opt.remoteConfig = this._opt.remoteConfig !== false;\n\n    this._processor = this._opt.processor || espProcessor;\n    this._requester = makeRequester(this._opt);\n\n    this.addFilter(ignoreNoiseFilter);\n    this.addFilter(makeDebounceFilter());\n    this.addFilter(uncaughtMessageFilter);\n    this.addFilter(angularMessageFilter);\n\n    this.addFilter((notice: INotice): INotice | null => {\n      notice.context.notifier = {\n        name: NOTIFIER_NAME,\n        version: NOTIFIER_VERSION,\n        url: NOTIFIER_URL,\n      };\n      if (this._opt.environment) {\n        notice.context.environment = this._opt.environment;\n      }\n      return notice;\n    });\n\n    this.routes = new Routes(this);\n    this.queues = new Queues(this);\n    this.queries = new QueriesStats(this._opt);\n\n    if (this._opt.remoteConfig) {\n      const pollerId = new RemoteSettings(this._opt).poll();\n      this._onClose.push(() => clearInterval(pollerId));\n    }\n  }\n\n  close(): void {\n    for (let fn of this._onClose) {\n      fn();\n    }\n  }\n\n  scope(): Scope {\n    return this._scope;\n  }\n\n  setActiveScope(scope: Scope) {\n    this._scope = scope;\n  }\n\n  addFilter(filter: Filter): void {\n    this._filters.push(filter);\n  }\n\n  addPerformanceFilter(performanceFilter: PerformanceFilter) {\n    this._performanceFilters.push(performanceFilter);\n  }\n\n  notify(err: any): Promise<INotice> {\n    if (typeof err !== 'object' || err === null || !('error' in err)) {\n      err = { error: err };\n    }\n    this.handleFalseyError(err);\n\n    let notice = this.newNotice(err);\n\n    if (!this._opt.errorNotifications) {\n      notice.error = new Error(\n        `airbrake: not sending this error, errorNotifications is disabled err=${JSON.stringify(\n          err.error\n        )}`\n      );\n      return Promise.resolve(notice);\n    }\n\n    let error = this._processor(err.error);\n    notice.errors!.push(error);\n\n    for (let filter of this._filters) {\n      let r = filter(notice);\n      if (r === null) {\n        notice.error = new Error('airbrake: error is filtered');\n        return Promise.resolve(notice);\n      }\n      notice = r;\n    }\n\n    if (!notice.context) {\n      notice.context = {};\n    }\n    notice.context.language = 'JavaScript';\n    return this._sendNotice(notice);\n  }\n\n  private handleFalseyError(err: any) {\n    if (Number.isNaN(err.error)) {\n      err.error = new Error('NaN');\n    } else if (err.error === undefined) {\n      err.error = new Error('undefined');\n    } else if (err.error === '') {\n      err.error = new Error('<empty string>');\n    } else if (err.error === null) {\n      err.error = new Error('null');\n    }\n  }\n\n  private newNotice(err: any): INotice {\n    return {\n      errors: [],\n      context: {\n        severity: 'error',\n        ...this.scope().context(),\n        ...err.context,\n      },\n      params: err.params || {},\n      environment: err.environment || {},\n      session: err.session || {},\n    };\n  }\n\n  _sendNotice(notice: INotice): Promise<INotice> {\n    // @ts-ignore\n    let body = jsonifyNotice(notice, {\n      // @ts-ignore\n      keysBlocklist: this._opt.keysBlocklist,\n    });\n    if (this._opt.reporter) {\n      if (typeof this._opt.reporter === 'function') {\n        return this._opt.reporter(notice);\n      } else {\n        console.warn('airbrake: options.reporter must be a function');\n      }\n    }\n\n    let req = {\n      method: 'POST',\n      url: this._url,\n      body,\n    };\n    return this._requester(req)\n      .then((resp) => {\n        notice.id = resp.json.id;\n        notice.url = resp.json.url;\n        return notice;\n      })\n      .catch((err) => {\n        notice.error = err;\n        return notice;\n      });\n  }\n\n  wrap(fn, props: string[] = []): IFuncWrapper {\n    if (fn._airbrake) {\n      return fn;\n    }\n\n    // tslint:disable-next-line:no-this-assignment\n    let client = this;\n    let airbrakeWrapper = function () {\n      let fnArgs = Array.prototype.slice.call(arguments);\n      let wrappedArgs = client._wrapArguments(fnArgs);\n      try {\n        // @ts-ignore\n        return fn.apply(this, wrappedArgs);\n      } catch (err) {\n        client.notify({ error: err, params: { arguments: fnArgs } });\n        client._ignoreNextWindowError();\n        throw err;\n      }\n    } as IFuncWrapper;\n\n    for (let prop in fn) {\n      if (fn.hasOwnProperty(prop)) {\n        airbrakeWrapper[prop] = fn[prop];\n      }\n    }\n    for (let prop of props) {\n      if (fn.hasOwnProperty(prop)) {\n        airbrakeWrapper[prop] = fn[prop];\n      }\n    }\n\n    airbrakeWrapper._airbrake = true;\n    airbrakeWrapper.inner = fn;\n\n    return airbrakeWrapper;\n  }\n\n  _wrapArguments(args: any[]): any[] {\n    for (let i = 0; i < args.length; i++) {\n      let arg = args[i];\n      if (typeof arg === 'function') {\n        args[i] = this.wrap(arg);\n      }\n    }\n    return args;\n  }\n\n  _ignoreNextWindowError() {}\n\n  call(fn, ..._args: any[]): any {\n    let wrapper = this.wrap(fn);\n    // @ts-ignore\n    return wrapper.apply(this, Array.prototype.slice.call(arguments, 1));\n  }\n}\n\nclass Routes {\n  _notifier: BaseNotifier;\n  _routes: RoutesStats;\n  _breakdowns: RoutesBreakdowns;\n  _opt: IOptions;\n\n  constructor(notifier: BaseNotifier) {\n    this._notifier = notifier;\n    this._routes = new RoutesStats(notifier._opt);\n    this._breakdowns = new RoutesBreakdowns(notifier._opt);\n    this._opt = notifier._opt;\n  }\n\n  start(\n    method = '',\n    route = '',\n    statusCode = 0,\n    contentType = ''\n  ): RouteMetric {\n    const metric = new RouteMetric(method, route, statusCode, contentType);\n\n    if (!this._opt.performanceStats) {\n      return metric;\n    }\n\n    const scope = this._notifier.scope().clone();\n    scope.setContext({ httpMethod: method, route });\n    scope.setRouteMetric(metric);\n    this._notifier.setActiveScope(scope);\n\n    return metric;\n  }\n\n  notify(req: RouteMetric): void {\n    if (!this._opt.performanceStats) {\n      return;\n    }\n\n    req.end();\n\n    for (const performanceFilter of this._notifier._performanceFilters) {\n      if (performanceFilter(req) === null) {\n        return;\n      }\n    }\n    this._routes.notify(req);\n    this._breakdowns.notify(req);\n  }\n}\n\nclass Queues {\n  _notifier: BaseNotifier;\n  _queues: QueuesStats;\n  _opt: IOptions;\n\n  constructor(notifier: BaseNotifier) {\n    this._notifier = notifier;\n    this._queues = new QueuesStats(notifier._opt);\n    this._opt = notifier._opt;\n  }\n\n  start(queue: string): QueueMetric {\n    const metric = new QueueMetric(queue);\n\n    if (!this._opt.performanceStats) {\n      return metric;\n    }\n\n    const scope = this._notifier.scope().clone();\n    scope.setContext({ queue });\n    scope.setQueueMetric(metric);\n    this._notifier.setActiveScope(scope);\n\n    return metric;\n  }\n\n  notify(q: QueueMetric): void {\n    if (!this._opt.performanceStats) {\n      return;\n    }\n\n    q.end();\n    this._queues.notify(q);\n  }\n}\n","import { INotice } from '../notice';\n\nexport function windowFilter(notice: INotice): INotice {\n  if (window.navigator && window.navigator.userAgent) {\n    notice.context.userAgent = window.navigator.userAgent;\n  }\n  if (window.location) {\n    notice.context.url = String(window.location);\n    // Set root directory to group errors on different subdomains together.\n    notice.context.rootDirectory =\n      window.location.protocol + '//' + window.location.host;\n  }\n  return notice;\n}\n","import { IFuncWrapper } from '../func_wrapper';\nimport { Notifier } from '../notifier';\n\nconst CONSOLE_METHODS = ['debug', 'log', 'info', 'warn', 'error'];\n\nexport function instrumentConsole(notifier: Notifier): void {\n  // tslint:disable-next-line:no-this-assignment\n  for (let m of CONSOLE_METHODS) {\n    if (!(m in console)) {\n      continue;\n    }\n\n    const oldFn = console[m];\n    let newFn = ((...args) => {\n      oldFn.apply(console, args);\n      notifier.scope().pushHistory({\n        type: 'log',\n        severity: m,\n        arguments: args,\n      });\n    }) as IFuncWrapper;\n    newFn.inner = oldFn;\n    console[m] = newFn;\n  }\n}\n","import { Notifier } from '../notifier';\n\nconst elemAttrs = ['type', 'name', 'src'];\n\nexport function instrumentDOM(notifier: Notifier) {\n  const handler = makeEventHandler(notifier);\n\n  if (window.addEventListener) {\n    window.addEventListener('load', handler);\n    window.addEventListener(\n      'error',\n      (event: Event): void => {\n        if (getProp(event, 'error')) {\n          return;\n        }\n        handler(event);\n      },\n      true\n    );\n  }\n\n  if (typeof document === 'object' && document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', handler);\n    document.addEventListener('click', handler);\n    document.addEventListener('keypress', handler);\n  }\n}\n\nfunction makeEventHandler(notifier: Notifier): EventListener {\n  return (event: Event): void => {\n    let target = getProp(event, 'target') as HTMLElement | null;\n    if (!target) {\n      return;\n    }\n\n    let state: any = { type: event.type };\n\n    try {\n      state.target = elemPath(target);\n    } catch (err) {\n      state.target = `<${String(err)}>`;\n    }\n\n    notifier.scope().pushHistory(state);\n  };\n}\n\nfunction elemName(elem: HTMLElement): string {\n  if (!elem) {\n    return '';\n  }\n\n  let s: string[] = [];\n\n  if (elem.tagName) {\n    s.push(elem.tagName.toLowerCase());\n  }\n\n  if (elem.id) {\n    s.push('#');\n    s.push(elem.id);\n  }\n\n  if (elem.classList && Array.from) {\n    s.push('.');\n    s.push(Array.from(elem.classList).join('.'));\n  } else if (elem.className) {\n    let str = classNameString(elem.className);\n    if (str !== '') {\n      s.push('.');\n      s.push(str);\n    }\n  }\n\n  if (elem.getAttribute) {\n    for (let attr of elemAttrs) {\n      let value = elem.getAttribute(attr);\n      if (value) {\n        s.push(`[${attr}=\"${value}\"]`);\n      }\n    }\n  }\n\n  return s.join('');\n}\n\nfunction classNameString(name: any): string {\n  if (name.split) {\n    return name.split(' ').join('.');\n  }\n  if (name.baseVal && name.baseVal.split) {\n    // SVGAnimatedString\n    return name.baseVal.split(' ').join('.');\n  }\n  console.error('unsupported HTMLElement.className type', typeof name);\n  return '';\n}\n\nfunction elemPath(elem: HTMLElement): string {\n  const maxLen = 10;\n\n  let path: string[] = [];\n\n  let parent = elem;\n  while (parent) {\n    let name = elemName(parent);\n    if (name !== '') {\n      path.push(name);\n      if (path.length > maxLen) {\n        break;\n      }\n    }\n    parent = parent.parentNode as HTMLElement;\n  }\n\n  if (path.length === 0) {\n    return String(elem);\n  }\n\n  return path.reverse().join(' > ');\n}\n\nfunction getProp(obj: any, prop: string): any {\n  try {\n    return obj[prop];\n  } catch (_) {\n    // Permission denied to access property\n    return null;\n  }\n}\n","import { Notifier } from '../notifier';\n\nexport function instrumentFetch(notifier: Notifier): void {\n  // tslint:disable-next-line:no-this-assignment\n  let oldFetch = window.fetch;\n  // @ts-ignore\n  window.fetch = function (\n    req: RequestInfo,\n    options?: RequestInit\n  ): Promise<Response> {\n    let state: any = {\n      type: 'xhr',\n      date: new Date(),\n    };\n\n    state.method = options && options.method ? options.method : 'GET';\n    if (typeof req === 'string') {\n      state.url = req;\n    } else {\n      state.method = req.method;\n      state.url = req.url;\n    }\n\n    // Some platforms (e.g. react-native) implement fetch via XHR.\n    notifier._ignoreNextXHR++;\n    setTimeout(() => notifier._ignoreNextXHR--);\n\n    return oldFetch\n      // @ts-ignore\n      .apply(this, arguments)\n      .then((resp: Response) => {\n        state.statusCode = resp.status;\n        state.duration = new Date().getTime() - state.date.getTime();\n        notifier.scope().pushHistory(state);\n        return resp;\n      })\n      .catch((err) => {\n        state.error = err;\n        state.duration = new Date().getTime() - state.date.getTime();\n        notifier.scope().pushHistory(state);\n        throw err;\n      });\n  };\n}\n","import { Notifier } from '../notifier';\n\nlet lastLocation = '';\n\n// In some environments (i.e. Cypress) document.location may sometimes be null\nfunction getCurrentLocation(): string | null {\n  return document.location && document.location.pathname;\n}\n\nexport function instrumentLocation(notifier: Notifier): void {\n  // @ts-ignore\n  lastLocation = getCurrentLocation();\n\n  const oldFn = window.onpopstate;\n  window.onpopstate = function abOnpopstate(_event: PopStateEvent): any {\n    const url = getCurrentLocation();\n    if (url) {\n      recordLocation(notifier, url);\n    }\n    if (oldFn) {\n      // @ts-ignore\n      return oldFn.apply(this, arguments);\n    }\n  };\n\n  const oldPushState = history.pushState;\n  history.pushState = function abPushState(\n    _state: any,\n    _title: string,\n    url?: string | null\n  ): void {\n    if (url) {\n      recordLocation(notifier, url.toString());\n    }\n    // @ts-ignore\n    oldPushState.apply(this, arguments);\n  };\n}\n\nfunction recordLocation(notifier: Notifier, url: string): void {\n  let index = url.indexOf('://');\n  if (index >= 0) {\n    url = url.slice(index + 3);\n    index = url.indexOf('/');\n    url = index >= 0 ? url.slice(index) : '/';\n  } else if (url.charAt(0) !== '/') {\n    url = '/' + url;\n  }\n\n  notifier.scope().pushHistory({\n    type: 'location',\n    from: lastLocation,\n    to: url,\n  });\n  lastLocation = url;\n}\n","import { Notifier } from '../notifier';\n\ninterface IXMLHttpRequestWithState extends XMLHttpRequest {\n  __state: any;\n}\n\nexport function instrumentXHR(notifier: Notifier): void {\n  function recordReq(req: IXMLHttpRequestWithState): void {\n    const state = req.__state;\n    state.statusCode = req.status;\n    state.duration = new Date().getTime() - state.date.getTime();\n    notifier.scope().pushHistory(state);\n  }\n\n  const oldOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function abOpen(\n    method: string,\n    url: string,\n    _async?: boolean,\n    _user?: string,\n    _password?: string\n  ): void {\n    if (notifier._ignoreNextXHR === 0) {\n      // @ts-ignore\n      this.__state = {\n        type: 'xhr',\n        method,\n        url,\n      };\n    }\n    // @ts-ignore\n    oldOpen.apply(this, arguments);\n  };\n\n  const oldSend = XMLHttpRequest.prototype.send;\n  XMLHttpRequest.prototype.send = function abSend(_data?: any): void {\n    let oldFn = this.onreadystatechange;\n    this.onreadystatechange = function (_ev: Event): any {\n      // @ts-ignore\n      if (this.readyState === 4 && this.__state) {\n        // @ts-ignore\n        recordReq(this);\n      }\n      if (oldFn) {\n        // @ts-ignore\n        return oldFn.apply(this, arguments);\n      }\n    };\n\n    // @ts-ignore\n    if (this.__state) {\n      (this as IXMLHttpRequestWithState).__state.date = new Date();\n    }\n    // @ts-ignore\n    return oldSend.apply(this, arguments);\n  };\n}\n","import { Notifier } from '../notifier';\n\nexport function instrumentUnhandledrejection(notifier: Notifier): void {\n  const handler = onUnhandledrejection.bind(notifier);\n\n  window.addEventListener('unhandledrejection', handler);\n  notifier._onClose.push(() => {\n    window.removeEventListener('unhandledrejection', handler);\n  });\n}\n\nfunction onUnhandledrejection(e: any): void {\n  // Handle native or bluebird Promise rejections\n  // https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection\n  // http://bluebirdjs.com/docs/api/error-management-configuration.html\n  let reason = e.reason || (e.detail && e.detail.reason);\n  if (!reason) return;\n\n  let msg = reason.message || String(reason);\n  if (msg.indexOf && msg.indexOf('airbrake: ') === 0) return;\n\n  if (typeof reason !== 'object' || reason.error === undefined) {\n    // @ts-ignore\n    this.notify({\n      error: reason,\n      context: {\n        unhandledRejection: true,\n      },\n    });\n    return;\n  }\n\n  // @ts-ignore\n  this.notify({ ...reason, context: { unhandledRejection: true } });\n}\n","import { BaseNotifier } from './base_notifier';\nimport { windowFilter } from './filter/window';\nimport { instrumentConsole } from './instrumentation/console';\nimport { instrumentDOM } from './instrumentation/dom';\nimport { instrumentFetch } from './instrumentation/fetch';\nimport { instrumentLocation } from './instrumentation/location';\nimport { instrumentXHR } from './instrumentation/xhr';\nimport { instrumentUnhandledrejection } from './instrumentation/unhandledrejection';\nimport { INotice } from './notice';\nimport { IInstrumentationOptions, IOptions } from './options';\n\ninterface ITodo {\n  err: any;\n  resolve: (notice: INotice) => void;\n  reject: (err: Error) => void;\n}\n\nexport class Notifier extends BaseNotifier {\n  protected offline = false;\n  protected todo: ITodo[] = [];\n\n  _ignoreWindowError = 0;\n  _ignoreNextXHR = 0;\n\n  constructor(opt: IOptions) {\n    super(opt);\n\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    this.addFilter(windowFilter);\n\n    if (window.addEventListener) {\n      this.onOnline = this.onOnline.bind(this);\n      window.addEventListener('online', this.onOnline);\n      this.onOffline = this.onOffline.bind(this);\n      window.addEventListener('offline', this.onOffline);\n\n      this._onClose.push(() => {\n        window.removeEventListener('online', this.onOnline);\n        window.removeEventListener('offline', this.onOffline);\n      });\n    }\n\n    this._instrument(opt.instrumentation);\n  }\n\n  _instrument(opt: IInstrumentationOptions = {}) {\n    if (opt.console === undefined) {\n      opt.console = !isDevEnv(this._opt.environment);\n    }\n\n    if (enabled(opt.onerror)) {\n      // tslint:disable-next-line:no-this-assignment\n      let self = this;\n      let oldHandler = window.onerror;\n      window.onerror = function abOnerror() {\n        if (oldHandler) {\n          // @ts-ignore\n          oldHandler.apply(this, arguments);\n        }\n        // @ts-ignore\n        self.onerror.apply(self, arguments);\n      };\n    }\n\n    instrumentDOM(this);\n    if (enabled(opt.fetch) && typeof fetch === 'function') {\n      instrumentFetch(this);\n    }\n    if (enabled(opt.history) && typeof history === 'object') {\n      instrumentLocation(this);\n    }\n    if (enabled(opt.console) && typeof console === 'object') {\n      instrumentConsole(this);\n    }\n    if (enabled(opt.xhr) && typeof XMLHttpRequest !== 'undefined') {\n      instrumentXHR(this);\n    }\n    if (\n      enabled(opt.unhandledrejection) &&\n      typeof addEventListener === 'function'\n    ) {\n      instrumentUnhandledrejection(this);\n    }\n  }\n\n  public notify(err: any): Promise<INotice> {\n    if (this.offline) {\n      return new Promise((resolve, reject) => {\n        this.todo.push({\n          err,\n          resolve,\n          reject,\n        });\n        while (this.todo.length > 100) {\n          let j = this.todo.shift();\n          if (j === undefined) {\n            break;\n          }\n          j.resolve({\n            error: new Error('airbrake: offline queue is too large'),\n          });\n        }\n      });\n    }\n\n    return super.notify(err);\n  }\n\n  protected onOnline(): void {\n    this.offline = false;\n\n    for (let j of this.todo) {\n      this.notify(j.err).then((notice) => {\n        j.resolve(notice);\n      });\n    }\n    this.todo = [];\n  }\n\n  protected onOffline(): void {\n    this.offline = true;\n  }\n\n  onerror(\n    message: string,\n    filename?: string,\n    line?: number,\n    column?: number,\n    err?: Error\n  ): void {\n    if (this._ignoreWindowError > 0) {\n      return;\n    }\n\n    if (err) {\n      this.notify({\n        error: err,\n        context: {\n          windowError: true,\n        },\n      });\n      return;\n    }\n\n    // Ignore errors without file or line.\n    if (!filename || !line) {\n      return;\n    }\n\n    this.notify({\n      error: {\n        message,\n        fileName: filename,\n        lineNumber: line,\n        columnNumber: column,\n        noStack: true,\n      },\n      context: {\n        windowError: true,\n      },\n    });\n  }\n\n  _ignoreNextWindowError(): void {\n    this._ignoreWindowError++;\n    setTimeout(() => this._ignoreWindowError--);\n  }\n}\n\nfunction isDevEnv(env: any): boolean {\n  return env && env.startsWith && env.startsWith('dev');\n}\n\nfunction enabled(v: undefined | boolean): boolean {\n  return v === undefined || v === true;\n}\n"],"names":["FILTERED","jsonifyNotice","notice","maxLength","keysBlocklist","keysAllowlist","i","t","Truncator","keys","level","opts","key","obj","truncate","params","err","scale","num","value","depth","type","objectType","saved","index","path","sub","getAttr","s","arr","length","dst","el","isInList","attr","list","v","Span","metric","name","startTime","endTime","now","BaseMetric","span","ms","NoopMetric","_name","_startTime","_ms","Scope","clone","context","ctx","state","root","factory","module","this","_isNumber","n","_capitalize","str","_getter","p","booleanProps","numericProps","stringProps","arrayProps","objectProps","props","StackFrame","fileName","lineNumber","columnNumber","functionName","argsStartIndex","argsEndIndex","args","locationString","parts","j","k","require$$0","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","error","urlLike","regExp","filtered","line","sanitizedLine","location","locationParts","functionNameRegex","matches","e","lineRE","lines","result","len","match","tokens","functionCall","argsRaw","hasConsole","parse","ErrorStackParser","parseErr","espProcessor","backtrace","frames","fakeErr","frame","msg","re","angularMessageFilter","m","makeDebounceFilter","lastNoticeJSON","timeout","IGNORED_MESSAGES","ignoreNoiseFilter","uncaughtMessageFilter","errors","rateLimitReset","request","req","opt","resp","json","body","makeRequester","api","resolve","reject","h","makeNodeRequester","fetchRequest","tdigest","hasTdigest","TDigestStat","tdigestCentroids","TDigestStatGroups","totalMs","groups","stat","td","means","counts","c","FLUSH_INTERVAL","QueryInfo","query","QueriesStats","q","minute","keyStr","queries","outJSON","_resp","QueueMetric","queue","QueuesStats","queues","RouteMetric","method","route","statusCode","contentType","RoutesStats","routes","RoutesBreakdowns","NOTIFIER_NAME","NOTIFIER_VERSION","NOTIFIER_URL","API_VER","DEFAULT_INTERVAL","NOTIFIER_INFO","ERROR_SETTING","APM_SETTING","RemoteSettings","SettingsData","pollerId","_","url","queryParams","data","ownProps","resArray","projectId","other","remoteConfigHost","host","configRoute","settings","setting","BaseNotifier","Routes","Queues","fn","scope","filter","performanceFilter","r","client","airbrakeWrapper","fnArgs","wrappedArgs","prop","arg","_args","notifier","windowFilter","CONSOLE_METHODS","instrumentConsole","oldFn","newFn","elemAttrs","instrumentDOM","handler","makeEventHandler","event","getProp","target","elemPath","elemName","elem","classNameString","parent","instrumentFetch","oldFetch","options","lastLocation","getCurrentLocation","instrumentLocation","_event","recordLocation","oldPushState","_state","_title","instrumentXHR","recordReq","oldOpen","_async","_user","_password","oldSend","_data","_ev","instrumentUnhandledrejection","onUnhandledrejection","reason","Notifier","isDevEnv","enabled","self","oldHandler","message","filename","column","env"],"mappings":"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","x_google_ignoreList":[3,4]}